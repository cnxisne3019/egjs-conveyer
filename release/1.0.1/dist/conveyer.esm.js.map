{"version":3,"file":"conveyer.esm.js","sources":["../src/cfcs/reactive/const.ts","../src/cfcs/reactive/Observer.ts","../src/cfcs/core/utils.ts","../src/cfcs/reactive/utils.ts","../src/cfcs/dom/utils.ts","../src/utils.ts","../src/Conveyer.ts","../src/consts.ts","../src/reactive.ts","../src/index.ts"],"sourcesContent":["export const OBSERVERS_PATH = \"__observers__\";\nexport const REACTIVE_PATH = \"__reactive__\";\n","import Component from \"@egjs/component\";\n\ninterface EmitterEvents<Value> {\n  update: (value: Value) => void;\n}\n\nexport class Observer<Value> {\n  private _current: Value;\n  private _emitter = new Component<EmitterEvents<Value>>();\n\n  constructor(value?: Value) {\n    this._current = value as any;\n  }\n  public get current() {\n    return this._current as Value;\n  }\n  public set current(value: Value) {\n    const isUpdate = value !== this._current;\n    this._current = value;\n\n    if (isUpdate) {\n      this._emitter.trigger(\"update\", value);\n    }\n  }\n  public subscribe(callback: (value: Value) => void) {\n    this._emitter.on(\"update\", callback);\n  }\n  public unsubscribe(callback?: (value: Value) => void) {\n    this._emitter.off(\"update\", callback);\n  }\n}\n","\nexport function keys<T extends Record<string, any>>(obj: T): Array<keyof T> {\n  return Object.keys(obj);\n}\n\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n","import { OBSERVERS_PATH } from \"./const\";\nimport { Observer } from \"./Observer\";\nimport { ReactiveMethods } from \"./types\";\nimport { keys, Ref } from \"../core\";\n\nexport function withReactiveMethods<\n  Instance,\n  Names extends keyof Partial<Instance>,\n  Return extends ReactiveMethods<Instance, Names>\n>(ref: Ref<Instance>, methods: readonly Names[]): Return {\n  const obj: Record<any, any> = {};\n\n  methods.forEach(name => {\n    obj[name] = function (...args: any[]) {\n      const current: any = ref.current || ref.value;\n\n      return current[name](...args);\n    };\n  });\n  return obj as Return;\n}\n\n\nexport function getObservers(instance: any): Record<string, Observer<any>> {\n  if (!instance[OBSERVERS_PATH]) {\n    instance[OBSERVERS_PATH] = {};\n  }\n  return instance[OBSERVERS_PATH];\n}\n\nexport function getObserver(instance: any, name: string, defaultValue?: any): Observer<any> {\n  const observers = getObservers(instance);\n\n  if (!observers[name]) {\n    observers[name] = new Observer(defaultValue);\n  }\n  return observers[name];\n}\n\nexport function Reactive(name?: string) {\n  return function (prototype: any, memberName: string) {\n    const publicName = name || memberName;\n\n    Object.defineProperty(prototype, memberName, {\n      get: function () {\n        return getObserver(this, publicName).current;\n      },\n      set: function (value: any) {\n        getObserver(this, publicName, value).current = value;\n      },\n    });\n    if (publicName !== memberName) {\n      Object.defineProperty(prototype, publicName, {\n        get: function () {\n          return getObserver(this, publicName).current;\n        },\n      });\n    }\n  };\n}\n\nexport function ReactiveSubscribe(Constructor: any) {\n  const prototype = Constructor.prototype;\n\n  prototype[\"subscribe\"] = function (name: string, callback: (value: any) => void) {\n    if (!(name in this)) {\n      return;\n    }\n    getObserver(this, name).subscribe(callback);\n  };\n  prototype[\"unsubscribe\"] = function (name?: string, callback?: (value: any) => void) {\n    if (!name) {\n      keys(getObservers(this)).forEach((observerName) => {\n        this.unsubscribe(observerName);\n      });\n      return;\n    }\n    if (!(name in this)) {\n      return;\n    }\n    getObserver(this, name).unsubscribe(callback);\n  };\n}\n\nexport interface ReactiveSubscribe<Properties extends Record<string, any>> {\n  subscribe<Name extends keyof Properties = keyof Properties>(\n    name: Name, callback: (value: Properties[Name]) => void): void;\n  unsubscribe<Name extends keyof Properties = keyof Properties>(\n    name?: Name, callback?: (value: Properties[Name]) => void): void;\n}\n","\nexport function withClassMethods(methods: readonly string[]) {\n  return function (prototype: any, memberName: string) {\n    methods.forEach((name: string) => {\n      if (name in prototype) {\n        return;\n      }\n      prototype[name] = function (...args) {\n        const result = this[memberName][name](...args);\n\n        // fix `this` type to return your own `class` instance to the instance using the decorator.\n        if (result === this[memberName]) {\n          return this;\n        } else {\n          return result;\n        }\n      };\n    });\n  };\n}\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport function isString(val: any): val is string {\n  return typeof val === \"string\";\n}\n\nexport function findIndex<T>(arr: T[], callback: (element: T, index: number) => boolean) {\n  const length = arr.length;\n\n  for (let i = 0; i < length; ++i) {\n    if (callback(arr[i], i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Axes, { PanInput } from \"@egjs/axes\";\nimport Component from \"@egjs/component\";\nimport { ReactiveSubscribe, Reactive, Ref } from \"./cfcs\";\nimport {\n  ConveyerEvents, ConveyerItem,\n  ConveyerOptions, FindItemOptions, ConveyerReactiveState,\n  ScrollIntoViewOptions,\n} from \"./types\";\nimport { isString } from \"./utils\";\n\n\n/**\n * Conveyer adds Drag gestures to your Native Scroll.\n * @ko Conveyer는 네이티브 스크롤에 드래그 제스처를 추가합니다.\n * @extends Component\n * @support {\"ie\": \"9+(with polyfill)\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"4.X+\"}\n * @example\n```html\n<div class=\"items\">\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n  <div class=\"item\"></div>\n</div>\n<script>\nimport Conveyer from \"@egjs/conveyer\";\n\nconst conveyer = new Conveyer(\".items\");\n</script>\n```\n */\n@ReactiveSubscribe\nclass Conveyer extends Component<ConveyerEvents> {\n  protected scrollAreaElement: HTMLElement;\n\n  protected axes: Axes;\n  protected items: ConveyerItem[] = [];\n  protected pos = 0;\n  protected size = 0;\n  protected scrollSize = 0;\n  protected options: ConveyerOptions;\n\n  private _scrollTimer = 0;\n  private _isDragScroll = false;\n  private _isAnimation = false;\n  private _scrollArea: string | HTMLElement | Ref<HTMLElement>;\n\n  /**\n   * Whether the scroll has reached the start.\n   * @ko 스크롤이 시작에 닿았는지 여부.\n   * @name Conveyer#isReachStart\n   * @type {boolean}\n   * @default false\n   * @readonly\n   * @example\n   * ```js\n   * import { Conveyer } from \"@egjs/conveyer\";\n   *\n   * const conveyer = new Conveyer(\".container\");\n   *\n   * conveyer.isReachStart\n   * ```\n   */\n  @Reactive(\"isReachStart\") private _isReachStart = false;\n  /**\n   * Whether the scroll has reached the end.\n   * @ko 스크롤이 끝에 닿았는지 여부.\n   * @name Conveyer#isReachEnd\n   * @type {boolean}\n   * @default false\n   * @readonly\n   * @example\n   * ```js\n   * import { Conveyer } from \"@egjs/conveyer\";\n   *\n   * const conveyer = new Conveyer(\".container\");\n   *\n   * conveyer.isReachEnd\n   * ```\n   */\n  @Reactive(\"isReachEnd\") private _isReachEnd = false;\n  /**\n   * @param - A base element for a module <ko>모듈을 적용할 기준 엘리먼트</ko>\n   * @param - The option object of the InfiniteGrid module <ko>eg.InfiniteGrid 모듈의 옵션 객체</ko>\n   */\n  constructor(scrollArea: string | HTMLElement | Ref<HTMLElement>, options: ConveyerOptions = {}) {\n    super();\n    this.options = {\n      horizontal: true,\n      useDrag: true,\n      autoInit: true,\n      scrollDebounce: 100,\n      ...options,\n    };\n\n    this._scrollArea = scrollArea;\n    if (this.options.autoInit) {\n      this.init();\n    }\n  }\n  /**\n   * Finds an element for that direction.\n   * @ko 해당 방향에 대해 엘리먼트를 찾는다.]\n   * @see {@link /docs/examples/Methods direction's example} page for detailed information\n   * @param - direction of the element. \"start\" and \"end\" find inside. \"prev\" and \"next\" find outside. <ko>엘리먼트의 방향. \"start\", \"end\"는 안쪽으로 찾는다. \"prev\", \"next\"는 바깥쪽으로 찾는다.</ko>\n   * @param - Options for the `findElement` method. <ko>findElement 메서드의 옵션</ko>\n   * @example\n   * <p align=\"center\">\n   *  <img src=\"/img/scrollIntoView1.png\" height=\"200\" />\n   * </p>\n   * <p align=\"center\">\n   *   <img src=\"/img/scrollIntoView2.png\" height=\"210\" />\n   * </p>\n   */\n  public findElement(direction: \"start\" | \"end\" | \"prev\" | \"next\", options: FindItemOptions = {}) {\n    return this.findItem(direction, options)?.element || null;\n  }\n  /**\n   * Finds an item for an element or its direction.\n   * @ko 엘리먼트 또는 해당 방향에 대해 아이템을 찾는다.\n   * @see {@link /docs/examples/Methods direction's example} page for detailed information\n   * @param - direction of the element. \"start\" and \"end\" find inside. \"prev\" and \"next\" find outside. <ko>엘리먼트의 방향. \"start\", \"end\"는 안쪽으로 찾는다. \"prev\", \"next\"는 바깥쪽으로 찾는다.</ko>\n   * @param - Options for the `findItem` method. <ko>`findItem` 메서드의 옵션</ko>\n   * @example\n   * <p align=\"center\">\n   *  <img src=\"/img/scrollIntoView1.png\" height=\"200\" />\n   * </p>\n   * <p align=\"center\">\n   *   <img src=\"/img/scrollIntoView2.png\" height=\"210\" />\n   * </p>\n   */\n  public findItem(\n    target: HTMLElement | \"start\" | \"end\" | \"prev\" | \"next\",\n    options: FindItemOptions = {},\n  ): ConveyerItem | null {\n    const pos = this.pos;\n    const scrollSize = this.scrollSize;\n    const size = this.size;\n    const hitTest = options?.hitTest ?? 1;\n    const items = [...this.items];\n    const length = items.length;\n    const endPos = pos + size;\n    const sibling = options.sibling;\n    const startVirtualItem = { pos: 0, size: 0 };\n    const endVirtualItem = { pos: scrollSize, size: 0 };\n\n    if (items[0].pos > 0) {\n      items.unshift(startVirtualItem);\n    }\n    if (length && items[length - 1].pos + items[length - 1].size < scrollSize) {\n      items.push(endVirtualItem);\n    }\n    let selectedItem: ConveyerItem | undefined;\n\n\n    if (target === \"start\") {\n      if (pos < 0) {\n        return null;\n      }\n      const selectedItems = [...items].reverse().filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos - pos;\n        const dist2 = dist + itemSize;\n\n        return (dist >= 0) || (dist2 >= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      }).reverse();\n\n      selectedItem = (selectedItems[0] === startVirtualItem && selectedItems[1]) || selectedItems[0];\n    } else if (target === \"end\") {\n      if (pos > scrollSize - size) {\n        return null;\n      }\n      const selectedItems = items.filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos + itemSize - endPos;\n        const dist2 = dist - itemSize;\n\n        return dist <= 0 || (dist2 <= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      }).reverse();\n\n      selectedItem = (selectedItems[0] === endVirtualItem && selectedItems[1]) || selectedItems[0];\n    } else if (target === \"prev\") {\n      selectedItem = items.filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos + itemSize - pos;\n        const dist2 = dist - itemSize;\n\n        return dist <= 0 || (dist2 <= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      }).reverse()[0];\n    } else if (target === \"next\") {\n      selectedItem = items.reverse().filter(item => {\n        const itemSize = item.size;\n        const dist = item.pos - endPos;\n        const dist2 = dist + itemSize;\n\n        return dist >= 0 || (dist2 >= 0 && (!itemSize || Math.abs(dist2) / itemSize >= hitTest));\n      }).reverse()[0];\n    } else {\n      return this._getItem(target);\n    }\n    if (sibling && selectedItem) {\n      const selectedIndex = items.indexOf(selectedItem);\n\n      if (selectedIndex > -1) {\n        selectedItem = items[selectedIndex + sibling];\n      }\n    }\n    return selectedItem || null;\n  }\n  /**\n   * Scrolls an element or an item in that direction into the view.\n   * @ko 엘리먼트나 해당 방향에 있는 아이템을 뷰안으로 스크롤을 한다.\n   * @see {@link /docs/examples/Methods target's example} page for detailed information\n   * @param - direction of the element. \"start\" and \"end\" find inside. \"prev\" and \"next\" find outside. <ko>엘리먼트의 방향. \"start\", \"end\"는 안쪽으로 찾는다. \"prev\", \"next\"는 바깥쪽으로 찾는다.</ko>\n   * @param - Options for the `scrollIntoView` method. <ko>`scrollIntoView` 메서드의 옵션</ko>\n   * @example\n   * <p align=\"center\">\n   *  <img src=\"/img/scrollIntoView1.png\" height=\"200\" />\n   * </p>\n   * <p align=\"center\">\n   *   <img src=\"/img/scrollIntoView2.png\" height=\"210\" />\n   * </p>\n   */\n  public scrollIntoView(target: HTMLElement | \"start\" | \"end\" | \"prev\" | \"next\", options: ScrollIntoViewOptions = {}) {\n    let item = this.findItem(target, options);\n\n    if (!item) {\n      return;\n    }\n    const duration = options.duration || 0;\n    let nextScrollPos = this._getNextScrollPos(item, options);\n\n    if (isString(target) && options.excludeStand && nextScrollPos === this.pos) {\n      const selectedIndex = this.items.indexOf(item);\n\n      if (selectedIndex === -1) {\n        return;\n      }\n      const sibling = target === \"start\" || target === \"prev\" ? -1 : 1;\n      item = this.items[selectedIndex + sibling];\n\n      if (!item) {\n        return;\n      }\n      nextScrollPos = this._getNextScrollPos(item, options);\n    }\n\n    this.scrollBy(nextScrollPos - this.pos, duration);\n  }\n  /**\n   * Scrolls by the given position amount.\n   * @ko 주어진 위치 양만큼 스크롤한다.\n   * @param - Amount of position to scroll by. <ko>스크롤할 위치의 양.</ko>\n   * @param - Duration to scroll by that position. <ko>해당 위치만큼 스크롤하는 시간</ko>\n   */\n  public scrollBy(pos: number, duration = 0) {\n    this.axes.setBy({ scroll: -pos }, duration);\n  }\n  /**\n   * Scroll to the given position.\n   * @ko 주어진 위치로 스크롤한다.\n   * @param - Amount of position to scroll to. <ko>스크롤할 위치의 양.</ko>\n   * @param - Duration to scroll to that position. <ko>해당 위치로 스크롤하는 시간</ko>\n   */\n  public scrollTo(pos: number, duration = 0) {\n    this.axes.setBy({ scroll: this.pos - pos }, duration);\n  }\n  /**\n   * Set the items directly to the Conveyer.\n   * @ko Conveyer에 아이템들을 직접 설정한다.\n   * @param - Items to set on Conveyer <ko>Conveyer에 설정할 아이템들</ko>\n   */\n  public setItems(items: ConveyerItem[]) {\n    this.items = items;\n  }\n  /**\n   * Update the position and size information of items.\n   * @ko 아이템들의 포지션, 사이즈 정보를 업데이트 한다.\n   */\n  public updateItems() {\n    const scrollAreaElement = this.scrollAreaElement;\n    const itemSelector = this.options.itemSelector;\n    const itemElements = [].slice.call(\n      itemSelector ? scrollAreaElement.querySelectorAll(itemSelector) : scrollAreaElement.children,\n    );\n    this.setItems(itemElements.map((el) => this._getItem(el)));\n  }\n  /**\n   * Update container size and scroll size.\n   * @ko 컨테이너의 크기, 스크롤 사이즈를 업데이트 한다.\n   */\n  public updateContainer() {\n    const scrollAreaElement = this.scrollAreaElement;\n    const horizontal = this.options.horizontal;\n\n    this.size = horizontal ? scrollAreaElement.clientWidth : scrollAreaElement.clientHeight;\n    this.scrollSize = horizontal ? scrollAreaElement.scrollWidth : scrollAreaElement.scrollHeight;\n    this._refreshScroll();\n    this._onScroll();\n  }\n  /**\n   * Updating containers and items.\n   * @ko 컨테이너와 아이템들을 업데이트 한다.\n   * @method\n   */\n  public update = () => {\n    this.updateItems();\n    this.updateContainer();\n  }\n  /**\n   * If you use the autoInit option as false, you can initialize it directly through the init method.\n   * @ko autoInit 옵션을 false로 사용하는 경우 직접 init 메서드를 통해 초기화 할 수 있다.\n   */\n  public init() {\n    if (this.axes) {\n      return;\n    }\n\n    const scrollArea = this._scrollArea;\n    let el!: HTMLElement;\n\n    if (isString(scrollArea)) {\n      el = document.querySelector<HTMLElement>(scrollArea)!;\n    } else if (scrollArea instanceof Element) {\n      el = scrollArea;\n    } else if (\"value\" in scrollArea || \"current\" in scrollArea) {\n      el = scrollArea.value! || scrollArea.current!;\n    }\n\n    this.scrollAreaElement = el;\n    let isDrag = false;\n    const scrollAreaElement = this.scrollAreaElement;\n    const axes = new Axes({\n      scroll: {\n        circular: true,\n        range: [-1000, 1000],\n      },\n    }, {\n      deceleration: 0.005,\n      round: 1,\n    });\n    let isHold = false;\n\n    axes.on({\n      \"hold\": e => {\n        isHold = true;\n        isDrag = false;\n        const inputEvent = e.inputEvent.srcEvent;\n\n        if (!inputEvent) {\n          return;\n        }\n        const options = this.options;\n        if (options.preventDefault) {\n          inputEvent.preventDefault();\n        }\n        if (options.preventClickOnDrag) {\n          this._disableClick();\n        }\n      },\n      \"change\": e => {\n        if (e.inputEvent && !isHold) {\n          return;\n        }\n        this._isDragScroll = !!e.inputEvent;\n        this._isAnimation = !!isHold;\n        isDrag = true;\n        const scroll = e.delta.scroll;\n\n        if (this.options.horizontal) {\n          scrollAreaElement.scrollLeft -= scroll;\n        } else {\n          scrollAreaElement.scrollTop -= scroll;\n        }\n      },\n      \"release\": e => {\n        if (!isDrag) {\n          e.setTo({ ...e.depaPos }, 0);\n          this._enableClick();\n        }\n        isDrag = false;\n      },\n    });\n\n    this.axes = axes;\n    if (this.options.useDrag) {\n      axes.connect(this.options.horizontal ? \"scroll\" : [\"\", \"scroll\"], new PanInput(scrollAreaElement, {\n        inputType: [\"mouse\"],\n      }));\n    }\n    scrollAreaElement.addEventListener(\"scroll\", this._onScroll);\n    window.addEventListener(\"resize\", this.update);\n\n    this.update();\n  }\n  /**\n   * Releases the instnace and events.\n   * @ko 인스턴스와 이벤트를 해제한다.\n   */\n  public destroy() {\n    this.axes?.destroy();\n    this.unsubscribe();\n    this.scrollAreaElement?.removeEventListener(\"scroll\", this._onScroll);\n    window.removeEventListener(\"resize\", this.update);\n    this.off();\n  }\n  private _refreshScroll() {\n    const horizontal = this.options.horizontal;\n    const scrollAreaElement = this.scrollAreaElement;\n    this.pos = horizontal ? scrollAreaElement.scrollLeft : scrollAreaElement.scrollTop;\n  }\n  private _getItem(element: HTMLElement): ConveyerItem {\n    const horizontal = this.options.horizontal;\n\n    return {\n      element,\n      pos: horizontal ? element.offsetLeft : element.offsetTop,\n      size: horizontal ? element.offsetWidth : element.offsetHeight,\n    };\n  }\n  private _getNextScrollPos(item: ConveyerItem, options: ScrollIntoViewOptions) {\n    const size = this.size;\n    const align = options.align || \"start\";\n    const padding = options.offset || 0;\n    const itemPos = item!.pos;\n    const itemSize = item!.size;\n    let scrollPos = 0;\n\n    if (align === \"start\") {\n      scrollPos = itemPos - padding;\n    } else if (align === \"end\") {\n      scrollPos = itemPos + itemSize - size + padding;\n    } else if (align === \"center\") {\n      scrollPos = itemPos + itemSize / 2 - size / 2 + padding;\n    }\n    return scrollPos;\n  }\n  private _onScroll = (e?: any) => {\n    if (e) {\n      this._debounceScroll();\n    }\n    this._refreshScroll();\n\n    const size = this.size;\n    const scrollSize = this.scrollSize;\n    const pos = this.pos;\n\n    // enter start\n    if (pos <= 0 && this.isReachStart !== true) {\n      this._isReachStart = true;\n      /**\n       * This event is fired when scroll reach start.\n       * @ko 스크롤이 앞에 닿으면 발생하는 이벤트이다.\n       * @event Conveyer#reachStart\n       */\n      this.trigger(\"reachStart\");\n    } else if (pos > 0 && this.isReachStart !== false) {\n      this._isReachStart = false;\n      /**\n       * This event is fired when scroll leave start.\n       * @ko 스크롤이 앞에서 떠나면 발생하는 이벤트이다.\n       * @event Conveyer#leaveStart\n       */\n      this.trigger(\"leaveStart\");\n    }\n    // enter end\n    if (pos >= scrollSize - size && this.isReachEnd !== true) {\n      this._isReachEnd = true;\n      /**\n       * This event is fired when scroll reach end.\n       * @ko 스크롤이 끝에 닿으면 발생하는 이벤트이다.\n       * @event Conveyer#reachEnd\n       */\n      this.trigger(\"reachEnd\");\n    } else if (pos < scrollSize - size && this.isReachEnd !== false) {\n      this._isReachEnd = false;\n      /**\n       * This event is fired when scroll leave end.\n       * @ko 스크롤이 끝에서 떠나면 발생하는 이벤트이다.\n       * @event Conveyer#leaveEnd\n       */\n      this.trigger(\"leaveEnd\");\n    }\n  }\n  private _onPreventClick = (e: Event) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this._enableClick();\n  }\n  private _enableClick() {\n    window.removeEventListener(\"click\", this._onPreventClick, true);\n  }\n  private _disableClick() {\n    window.addEventListener(\"click\", this._onPreventClick, true);\n  }\n  private _debounceScroll() {\n    if (!this._scrollTimer) {\n      /**\n       * This event is fired when begin scroll.\n       * @ko 스크롤이 시작하면 발생하는 이벤트이다.\n       * @event Conveyer#beginScroll\n       */\n      this.trigger(\"beginScroll\");\n    }\n    window.clearTimeout(this._scrollTimer);\n    this._scrollTimer = window.setTimeout(() => {\n      this._scrollTimer = 0;\n      /**\n       * This event is fired when finish scroll.\n       * @ko 스크롤이 끝나면 발생하는 이벤트이다.\n       * @event Conveyer#finishScroll\n       * @param {OnFinishScroll} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n       */\n      this.trigger(\"finishScroll\", {\n        isDragScroll: this._isDragScroll,\n        isTrusted: this._isDragScroll || !this._isAnimation,\n      });\n\n      this._isDragScroll = false;\n      this._isAnimation = false;\n    }, this.options.scrollDebounce);\n  }\n}\n\n\ninterface Conveyer extends ConveyerReactiveState, ReactiveSubscribe<ConveyerReactiveState> { }\n\nexport default Conveyer;\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport const CONVEYER_METHODS = [\n  \"update\",\n  \"findElement\",\n  \"findItem\",\n  \"scrollBy\",\n  \"scrollTo\",\n  \"scrollIntoView\",\n  \"setItems\",\n  \"updateContainer\",\n  \"updateItems\",\n  \"init\",\n] as const;\n\nexport const CONVEYER_EVENTS = [\n  \"reachStart\",\n  \"reachEnd\",\n  \"leaveStart\",\n  \"leaveEnd\",\n  \"beginScroll\",\n  \"finishScroll\",\n] as const;\n\nexport const CONVEYER_REACTIVE_STATE = {\n  \"isReachStart\": false,\n  \"isReachEnd\": false,\n} as const;\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Conveyer from \"./Conveyer\";\nimport { CONVEYER_EVENTS, CONVEYER_METHODS, CONVEYER_REACTIVE_STATE } from \"./consts\";\nimport { ReactiveAdapter, Ref } from \"./cfcs\";\nimport { ConveyerEvents, ConveyerMethods, ConveyerOptions, ConveyerReactiveState } from \"./types\";\n\n\nexport interface ConveyerData {\n  container: Ref<HTMLElement>;\n  props: ConveyerOptions;\n}\n\nexport const REACTIVE_CONVEYER: ReactiveAdapter<\n  Conveyer,\n  ConveyerReactiveState,\n  keyof ConveyerMethods,\n  ConveyerData,\n  ConveyerEvents\n> = {\n  state: CONVEYER_REACTIVE_STATE,\n  methods: CONVEYER_METHODS,\n  events: CONVEYER_EVENTS,\n  instance(data) {\n    return new Conveyer(data.container, { ...data.props, autoInit: false });\n  },\n  init(instance, data) {\n    if (data.props.autoInit !== false) {\n      instance.init();\n    }\n  },\n  on(instance, name, callback) {\n    instance.on(name, callback);\n  },\n  off(instance, name, callback) {\n    instance.off(name, callback);\n  },\n  destroy(instance) {\n    instance.destroy();\n  },\n};\n","/**\n * egjs-conveyer\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Conveyer from \"./Conveyer\";\n\nexport default Conveyer;\n\nexport * from \"./consts\";\nexport * from \"./types\";\nexport * from \"./reactive\";\nexport * from \"./cfcs\";\n"],"names":["OBSERVERS_PATH","value","Component","_current","Object","isUpdate","_emitter","trigger","callback","on","off","keys","obj","camelize","str","replace","all","letter","toUpperCase","withReactiveMethods","ref","methods","forEach","name","_i","args","current","getObservers","instance","getObserver","defaultValue","observers","Observer","Reactive","prototype","memberName","publicName","defineProperty","get","set","ReactiveSubscribe","Constructor","subscribe","observerName","_this","unsubscribe","withClassMethods","result","_a","isString","val","__extends","scrollArea","options","_super","updateItems","updateContainer","e","_debounceScroll","_refreshScroll","size","scrollSize","pos","isReachStart","_isReachStart","isReachEnd","_isReachEnd","stopPropagation","preventDefault","_enableClick","horizontal","useDrag","autoInit","scrollDebounce","_scrollArea","init","direction","findItem","element","target","hitTest","items","length","endPos","sibling","startVirtualItem","endVirtualItem","unshift","push","selectedItem","selectedItems","__spreadArray","reverse","filter","item","itemSize","dist","dist2","Math","abs","_getItem","selectedIndex","indexOf","duration","nextScrollPos","_getNextScrollPos","excludeStand","scrollBy","axes","setBy","scroll","scrollAreaElement","itemSelector","itemElements","slice","call","querySelectorAll","children","setItems","map","el","clientWidth","clientHeight","scrollWidth","scrollHeight","_onScroll","document","querySelector","Element","isDrag","Axes","circular","range","deceleration","round","isHold","inputEvent","srcEvent","preventClickOnDrag","_disableClick","_isDragScroll","_isAnimation","delta","scrollLeft","scrollTop","setTo","depaPos","connect","PanInput","inputType","addEventListener","window","update","destroy","removeEventListener","offsetLeft","offsetTop","offsetWidth","offsetHeight","align","padding","offset","itemPos","scrollPos","_onPreventClick","_scrollTimer","clearTimeout","setTimeout","isDragScroll","isTrusted","__decorate","Conveyer","CONVEYER_METHODS","CONVEYER_EVENTS","CONVEYER_REACTIVE_STATE","REACTIVE_CONVEYER","state","events","data","container","props"],"mappings":"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"}